name: release

on:
  workflow_dispatch:
  push:
   branches:
     - patch-1
  
jobs:
  build-and-release:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set Up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
      
    - name: Set up Go 1.20
      uses: actions/setup-go@v1
      with:
        go-version: 1.20
      id: go
      
    - name: Install NDK
      run: |
        NDK_VERSION="$(grep -E "^de\.felixnuesse\.extract\.ndkVersion=" gradle.properties | cut -d'=' -f2)"
        yes | sudo "${ANDROID_HOME}/tools/bin/sdkmanager" --licenses
        sudo "${ANDROID_HOME}/tools/bin/sdkmanager" "ndk;${NDK_VERSION}"
      
    - name: Build APKs
      run: ./gradlew assembleOssRelease
      
    - name: Sign APKs
      env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
      run: |
          echo "${KEYSTORE_BASE64}" | base64 -d > apksign.keystore
          for apk in app/build/outputs/apk/oss/release/*-unsigned*.apk; do
            out=${apk/-unsigned/-signed}
            ${ANDROID_HOME}/build-tools/30.0.2/apksigner sign --ks apksign.keystore --ks-pass env:KEYSTORE_PASS --out "${out}" "${apk}"
            echo "$(sha256sum ${out})"
          done
          rm apksign.keystore
      
    - name: Extract Version
      id: extract_version
      run: |
        version=$(grep -o "versionName\s*['\"]\([^'\"]*\)" app/build.gradle | sed "s/versionName\s*['\"]//")
        echo "Extracted version: $version"
        echo "::set-output name=version::$version"
    
    - name: Create Release And Upload APKs
      uses: ncipollo/release-action@v1
      with:
         token: ${{ secrets.GAT }}
         name: "RoundSync - v${{ steps.extract_version.outputs.version }}"
         tag: "v${{ steps.extract_version.outputs.version }}"
         artifacts: app/build/outputs/apk/oss/release/*-signed*.apk
      
    - name: Archive Reports For Job
      uses: actions/upload-artifact@v3
      with:
          name: reports
          path: '*/build/reports'
      if: ${{ always() }}
